{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hamad\\\\OneDrive\\\\Bureau\\\\whatson\\\\src\\\\pagination.js\";\nimport React, { useState, useEffect, Fragment, useMemo } from \"react\";\nimport { Pagination, PaginationItem, PaginationLink } from \"reac\";\nconst LEFT_PAGE = \"LEFT\";\nconst RIGHT_PAGE = \"RIGHT\";\n\nconst range = (from, to, step = 1) => {\n  let i = from;\n  const range = [];\n\n  while (i <= to) {\n    range.push(i);\n    i += step;\n  }\n\n  return range;\n};\n\nconst Paginations = props => {\n  const {\n    totalRecords,\n    pageLimit,\n    pageNeighbours,\n    onPageChanged,\n    currentPage\n  } = props;\n  const [totalPages, setTotalPages] = useState(0);\n  useEffect(() => {\n    setTotalPages(Math.ceil(totalRecords / pageLimit));\n  }, [currentPage]);\n\n  const fetchPageNumbers = () => {\n    const totalNumbers = pageNeighbours * 2 + 3;\n    const totalBlocks = totalNumbers + 2;\n\n    if (totalPages > totalBlocks) {\n      const startPage = Math.max(2, currentPage - pageNeighbours);\n      const endPage = Math.min(totalPages - 1, currentPage + pageNeighbours);\n      let pages = range(startPage, endPage);\n      const hasLeftSpill = startPage > 2;\n      const hasRightSpill = totalPages - endPage > 1;\n      const spillOffset = totalNumbers - (pages.length + 1);\n\n      switch (true) {\n        // handle: (1) < {5 6} [7] {8 9} (10)\n        case hasLeftSpill && !hasRightSpill:\n          {\n            const extraPages = range(startPage - spillOffset, startPage - 1);\n            pages = [LEFT_PAGE, ...extraPages, ...pages];\n            break;\n          }\n        // handle: (1) < {4 5} [6] {7 8} > (10)\n\n        case hasLeftSpill && hasRightSpill:\n        default:\n          {\n            pages = [LEFT_PAGE, ...pages, RIGHT_PAGE];\n            break;\n          }\n      }\n\n      return [1, ...pages, totalPages];\n    }\n\n    return range(1, totalPages);\n  };\n\n  const pages = fetchPageNumbers() || [];\n  return /*#__PURE__*/React.createElement(Pagination, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, pages.map((page, index) => {\n    if (page === LEFT_PAGE) return /*#__PURE__*/React.createElement(PaginationItem, {\n      disabled: currentPage <= 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(PaginationLink, {\n      onClick: e => onPageChanged(e, currentPage - 1),\n      \"aria-label\": \"Pr\\xE9c\\xE9dent\",\n      previous: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 15\n      }\n    }));\n    if (page === RIGHT_PAGE) return /*#__PURE__*/React.createElement(PaginationItem, {\n      disabled: currentPage >= totalPages - 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(PaginationLink, {\n      onClick: e => onPageChanged(e, currentPage + 1),\n      \"aria-label\": \"Suivant\",\n      next: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 15\n      }\n    }));\n    return /*#__PURE__*/React.createElement(PaginationItem, {\n      active: currentPage === index,\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(PaginationLink, {\n      onClick: e => onPageChanged(e, page),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }\n    }, page));\n  }));\n};\n\nexport default Paginations;","map":{"version":3,"sources":["C:/Users/hamad/OneDrive/Bureau/whatson/src/pagination.js"],"names":["React","useState","useEffect","Fragment","useMemo","Pagination","PaginationItem","PaginationLink","LEFT_PAGE","RIGHT_PAGE","range","from","to","step","i","push","Paginations","props","totalRecords","pageLimit","pageNeighbours","onPageChanged","currentPage","totalPages","setTotalPages","Math","ceil","fetchPageNumbers","totalNumbers","totalBlocks","startPage","max","endPage","min","pages","hasLeftSpill","hasRightSpill","spillOffset","length","extraPages","map","page","index","e"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, Fragment, useMemo } from \"react\";\r\nimport { Pagination, PaginationItem, PaginationLink } from \"reac\";\r\n\r\nconst LEFT_PAGE = \"LEFT\";\r\nconst RIGHT_PAGE = \"RIGHT\";\r\n\r\nconst range = (from, to, step = 1) => {\r\n  let i = from;\r\n  const range = [];\r\n\r\n  while (i <= to) {\r\n    range.push(i);\r\n    i += step;\r\n  }\r\n\r\n  return range;\r\n};\r\n\r\nconst Paginations = props => {\r\n  const {\r\n    totalRecords,\r\n    pageLimit,\r\n    pageNeighbours,\r\n    onPageChanged,\r\n    currentPage\r\n  } = props;\r\n  const [totalPages, setTotalPages] = useState(0);\r\n  useEffect(() => {\r\n    setTotalPages(Math.ceil(totalRecords / pageLimit));\r\n  }, [currentPage]);\r\n\r\n  const fetchPageNumbers = () => {\r\n    const totalNumbers = pageNeighbours * 2 + 3;\r\n    const totalBlocks = totalNumbers + 2;\r\n\r\n    if (totalPages > totalBlocks) {\r\n      const startPage = Math.max(2, currentPage - pageNeighbours);\r\n      const endPage = Math.min(totalPages - 1, currentPage + pageNeighbours);\r\n\r\n      let pages = range(startPage, endPage);\r\n\r\n      const hasLeftSpill = startPage > 2;\r\n      const hasRightSpill = totalPages - endPage > 1;\r\n      const spillOffset = totalNumbers - (pages.length + 1);\r\n\r\n      switch (true) {\r\n        // handle: (1) < {5 6} [7] {8 9} (10)\r\n        case hasLeftSpill && !hasRightSpill: {\r\n          const extraPages = range(startPage - spillOffset, startPage - 1);\r\n          pages = [LEFT_PAGE, ...extraPages, ...pages];\r\n          break;\r\n        }\r\n        // handle: (1) < {4 5} [6] {7 8} > (10)\r\n        case hasLeftSpill && hasRightSpill:\r\n        default: {\r\n          pages = [LEFT_PAGE, ...pages, RIGHT_PAGE];\r\n          break;\r\n        }\r\n      }\r\n      return [1, ...pages, totalPages];\r\n    }\r\n    return range(1, totalPages);\r\n  };\r\n\r\n  const pages = fetchPageNumbers() || [];\r\n  return (\r\n    <Pagination>\r\n      {pages.map((page, index) => {\r\n        if (page === LEFT_PAGE)\r\n          return (\r\n            <PaginationItem disabled={currentPage <= 0}>\r\n              <PaginationLink\r\n                onClick={e => onPageChanged(e, currentPage - 1)}\r\n                aria-label=\"Précédent\"\r\n                previous\r\n              />\r\n            </PaginationItem>\r\n          );\r\n\r\n        if (page === RIGHT_PAGE)\r\n          return (\r\n            <PaginationItem disabled={currentPage >= totalPages - 1}>\r\n              <PaginationLink\r\n                onClick={e => onPageChanged(e, currentPage + 1)}\r\n                aria-label=\"Suivant\"\r\n                next\r\n              />\r\n            </PaginationItem>\r\n          );\r\n\r\n        return (\r\n          <PaginationItem active={currentPage === index} key={index}>\r\n            <PaginationLink onClick={e => onPageChanged(e, page)}>\r\n              {page}\r\n            </PaginationLink>\r\n          </PaginationItem>\r\n        );\r\n      })}\r\n    </Pagination>\r\n  );\r\n};\r\n\r\nexport default Paginations;"]},"metadata":{},"sourceType":"module"}